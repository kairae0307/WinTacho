<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label18.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCAAmAKkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/RADnIz0/rT8D0H5CmR9/wAP618V/HPQf+Cgs/jDV9R/Z0+I
        f7MFh4EaysDo3hj4q+A/iBdeJob6GxVdSF34l8O+JRp1xDe6gHksyNFtzZ28ixzC4aMu/JjcVLB0fbRw
        mLxvvqLpYKFKpWSak+fkq1qKcVyqL5ZSneUbRau19FwzkFHiPMnl1biLh7hlfV51oZhxNisdg8tqThUp
        U1hViMBl2ZzhiKiqupB1qNLD+zo1XOvCapwqfa+B6D8hRgeg/IV/Hrff8Fyf28rHxFeeE28L/Aa68QWf
        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
        9L0+0XQ0khaeT9SaKKAP/9k=
</value>
  </data>
</root>